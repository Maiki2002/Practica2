.cpu cortex-m3
	.arch armv7-m
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.file	"main.c"
    .data
    message:
        .space 20
	.text
	.align	1
	.global	main
	.syntax unified
	.thumb
	.thumb_func
	.type	main, %function

leer:
	@prologo
	push {r7,lr}
	sub sp, sp, #20
	add r7, sp, #0

	ldr r0, =0 @Indica que se leerá desde la entrada estándar.
	ldr r1, =message
	ldr r2, =20
	mov r7, #3
	svc #0

	bl imprimir

	@exit
	mov r0, #0
	mov r7, #1
	svc #0

	

	@epilogo
	adds r7, r7, #4
	mov sp, r7
	pop {r7}
	bx lr


imprimir:
	@prologo
	push {r7}
	sub sp, sp, #4
	add r7, sp, #0

	@imprimir en consola
    ldr r0, =1 @Se utiliza para la salida estándar
    ldr r1, =message
    mov r2, #12
    mov r7, #4
    svc 0x0

	@exit
	mov r0, #0
	mov r7, #1
	svc #0

	@epilogo
	adds r7, r7, #4
	mov sp, r7
	pop {r7}
	bx lr
    
main:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7, lr}
	sub	sp, sp, #16
	add	r7, sp, #0
	movs	r3, #0
	str	r3, [r7, #4]

	bl leer
	
	
	movs	r3, #0
	mov	r0, r3
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	pop	{r7}
	bx	lr
	.size	main, .-main
	.ident	"GCC: (Arm GNU Toolchain 12.2 (Build arm-12.24)) 12.2.1 20221205"
